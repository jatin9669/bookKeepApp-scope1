<% content_for :title, "Books" %>

<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
  <div class="flex flex-col space-y-4 sm:space-y-0 sm:flex-row sm:justify-between sm:items-center mb-8">
    <h1 class="font-bold text-4xl text-gray-900">Books</h1>
    <% if user_signed_in? && current_user.is_admin? %>
      <%= link_to new_book_path, 
          class: "inline-flex items-center px-4 py-2.5 bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-500 hover:to-purple-500 text-white font-medium rounded-lg shadow-sm hover:shadow-md transition duration-200" do %>
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/>
        </svg>
        New Book
      <% end %>
    <% end %>
  </div>

  <div id="books" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8">
    <% if @books.any? %>
      <% @books.each do |book| %>
        <div class="group bg-white rounded-lg shadow-sm hover:shadow-xl hover:-translate-y-1 hover:scale-[1.02] transition-all duration-300 h-[100%] <%= 'opacity-75' if ((current_user && !current_user.is_admin? && book.total_quantity == 0)) %>">
          <%= render book %>
          
          <% if user_signed_in? %>
            <div class="p-4 border-t border-gray-100 bg-gray-50 rounded-b-lg">
              <% if current_user.is_admin? %>
                <div class="grid grid-cols-2 gap-3">
                  <%= link_to edit_book_path(book), 
                      class: "flex items-center justify-center px-4 py-2 bg-gray-100 hover:bg-gray-200 text-gray-700 font-medium rounded-md transition duration-200" do %>
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
                    </svg>
                    Edit
                  <% end %>
                  
                  <%= button_to book, 
                      method: :delete,
                      class: "flex items-center justify-center w-full px-4 py-2 bg-red-600 hover:bg-red-500 text-white font-medium rounded-md transition duration-200 cursor-pointer",
                      data: { turbo_confirm: "Are you sure?" } do %>
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                    </svg>
                    Delete
                  <% end %>
                </div>
              <% elsif user_signed_in? && !current_user.is_admin? %>
                <% if book.total_quantity.present? && book.total_quantity == 0 %>
                  <button disabled class="w-full px-4 py-2.5 bg-gray-400 text-white font-medium rounded-md cursor-not-allowed">
                    Not Available
                  </button>
                <% else %>
                  <div class="to-be-shown-<%= book.id %> hidden flex items-center justify-center">
                    <button 
                        onclick="decrementQuantity(<%= book.id %>, <%= book.total_quantity %>)" 
                        class="decrement-button-<%= book.id %> 
                               px-4 py-2.5 bg-gray-100 text-gray-700 font-medium rounded-md transition duration-200 
                               disabled:cursor-not-allowed disabled:opacity-50 hover:bg-gray-200"> - </button>
                    <span class="counter-<%= book.id %> px-4 py-2.5 bg-gray-100 text-black font-medium rounded-md transition duration-200"> 1 </span>
                    <button 
                        onclick="incrementQuantity(<%= book.id %>, <%= book.total_quantity %>)" 
                        class="increment-button-<%= book.id %> 
                               px-4 py-2.5 bg-gray-100 text-gray-700 font-medium rounded-md transition duration-200 
                               disabled:cursor-not-allowed disabled:opacity-50 hover:bg-gray-200"> + </button>
                  </div>
                  <button onclick="handleRequestToBorrow(<%= book.id %>, <%= book.total_quantity %>)" class="to-be-hidden-<%= book.id %> w-full px-4 py-2.5 bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-500 hover:to-purple-500 text-white font-medium rounded-md transition duration-200 flex items-center justify-center cursor-pointer"> Request to borrow </button>
                  <button class="hidden mt-2 to-be-shown-<%= book.id %> w-full px-4 py-2.5 bg-green-600 hover:bg-green-500 text-white font-medium rounded-md transition duration-200 flex items-center justify-center cursor-pointer" onclick="handleConfirmPurchase(<%= book.id %>, <%= current_user.id %>)">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12l5 5L20 7"/>
                    </svg>
                    Confirm Purchase 
                  </button>
                <% end %>
              <% end %>
            </div>
          <% end %>
        </div>
      <% end %>
    <% else %>
      <div class="col-span-full">
        <div class="text-center py-12">
          <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"/>
          </svg>
          <h3 class="mt-2 text-lg font-medium text-gray-900">No books found</h3>
          <p class="mt-1 text-gray-500">Get started by creating a new book.</p>
        </div>
      </div>
    <% end %>
  </div>
</div>

<script>
  let quantity = {};

  function incrementQuantity(bookId, totalQuantity) {
    const decrementButton = document.querySelector('.decrement-button-'+bookId);
    decrementButton.disabled = false;
    quantity[bookId]=quantity[bookId]+1||1;
    document.querySelector('.counter-'+bookId).textContent = quantity[bookId];
    if (quantity[bookId] == totalQuantity) {
        const incrementButton = document.querySelector('.increment-button-'+bookId);
        incrementButton.disabled = true;
    }
  }
  
  function decrementQuantity(bookId, totalQuantity) {
    const incrementButton = document.querySelector('.increment-button-'+bookId);
      incrementButton.disabled = false;
    quantity[bookId]=quantity[bookId]-1||1;
    document.querySelector('.counter-'+bookId).textContent = quantity[bookId];
    if (quantity[bookId] == 1) {
        const decrementButton = document.querySelector('.decrement-button-'+bookId);
        decrementButton.disabled = true;
    }
  }

  function handleRequestToBorrow(bookId, totalQuantity){
    const requestToBorrowButton = document.querySelector('.to-be-hidden-'+bookId);
    const confirmPurchaseButton = document.querySelectorAll('.to-be-shown-'+bookId);

    requestToBorrowButton.classList.add('hidden');
    confirmPurchaseButton.forEach(button => {
      button.classList.remove('hidden');
    });

    quantity[bookId] = 1;

    document.querySelector('.decrement-button-'+bookId).disabled = true;
    if (totalQuantity == 1){
      document.querySelector('.increment-button-'+bookId).disabled = true;
    }
  }

  function handleConfirmPurchase(bookId,userId){
    const requestToBorrowButton = document.querySelector('.to-be-hidden-'+bookId);
    const confirmPurchaseButtons = document.querySelectorAll('.to-be-shown-'+bookId);

    requestToBorrowButton.classList.remove('hidden');
    confirmPurchaseButtons.forEach(button => {
      button.classList.add('hidden');
    });
      const csrfTokenElement = document.querySelector("meta[name='csrf-token']");
  if (!csrfTokenElement) {
    console.error("CSRF token not found");
    return;
  }
  
  const csrfToken = csrfTokenElement.getAttribute("content");

  fetch("/borrowed_books", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      "X-CSRF-Token": csrfToken, // Include CSRF token
    },
    body: JSON.stringify({
      borrowed_book: {
        book_id: bookId,
        user_id: userId,
        quantity: quantity[bookId] || 1
      }
    }),
    credentials: "same-origin"
  }).then(response => {
    if (response.ok) {
      alert("Book issued successfully!");
      location.reload();
    } else {
      alert("Failed to issue book.");
    }
  }).catch(error => console.error("Error:", error));
}

  
</script>